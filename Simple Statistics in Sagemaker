import warnings, requests, zipfile, io
warnings.simplefilter('ignore')
import pandas as pd
from scipy.io import arff



f_zip = 'http://archive.ics.uci.edu/ml/machine-learning-databases/00212/vertebral_column_data.zip'
r = requests.get(f_zip, stream=True)
Vertebral_zip = zipfile.ZipFile(io.BytesIO(r.content))
Vertebral_zip.extractall()



data = arff.loadarff('column_2C_weka.arff')
df = pd.DataFrame(data[0])



df.describe()




import matplotlib.pyplot as plt
%matplotlib inline
df.plot()




df.plot(kind='density',subplots=True,layout=(4,2),figsize=(12,12),sharex=False)
plt.show()




df['degree_spondylolisthesis'].plot.density()



df['degree_spondylolisthesis'].plot.hist()



df['degree_spondylolisthesis'].plot.box()



df['class'].value_counts()




class_mapper = {b'Abnormal':1,b'Normal':0}
df['class']=df['class'].replace(class_mapper)





df.plot.scatter(y='degree_spondylolisthesis',x='class')




df.groupby('class').boxplot(fontsize=20,rot=90,figsize=(20,10),patch_artist=True)



pd.plotting.scatter_matrix(df,figsize=(12,12))
plt.show()




import seaborn as sns
# Plot figsize
fig, ax = plt.subplots(figsize=(10, 10))
# Generate Color Map
# colormap = sns.diverging_palette(220, 10, as_cmap=True)
colormap = sns.color_palette("BrBG", 10)
# Generate Heat Map, allow annotations and place floats in map
sns.heatmap(corr_matrix, cmap=colormap, annot=True, fmt=".2f")
#ax.set_yticklabels(column_names);
plt.show()



corr_matrix = df.corr()
corr_matrix["class"].sort_values(ascending=False)
